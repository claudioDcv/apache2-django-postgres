# -*- coding: utf-8 -*-
"""
Django settings for vetadminproject project.
Generated by 'django-admin startproject' using Django 1.10.6.
For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# import channels.asgi
# import asgi_redis
from asgi_redis import RedisChannelLayer

from vetadminproject.paths import PROJECT_DIR
from vetadminproject.paths import PROJECT_NAME
# from vetadminproject.paths import VAR_ROOT
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0730$g285s_s57j$*d_n$s6jdpx-w^aq#5!9as(2n@x+a3_1-3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Redirect when login is correct.
LOGIN_REDIRECT_URL = "/consulta/"
# Redirect when login is not correct.
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'medicalConsultation',
    'metrics',
    'pharmacy',
    'customers',
    'bootstrap4',
    'channels'
]

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vetadminproject.urls'

TEMPLATE_BASE_DIR = os.path.join(PROJECT_DIR, PROJECT_NAME, 'templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            TEMPLATE_BASE_DIR,
            os.path.join(PROJECT_DIR, 'medicalConsultation', 'templates'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vetadminproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases


def env(name):
    return os.environ.get(name, None)


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'vetadmin',
        'USER': 'postgres',
        'PASSWORD': '1234567890',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # noqa E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # noqa E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # noqa E501
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # noqa E501
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/
TIME_ZONE = 'America/Santiago'
LANGUAGE_CODE = 'es-CL'
USE_I18N = True
USE_L10N = True
USE_TZ = True
SITE_ID = 1


# os.environ.setdefault("DJANGO_SETTINGS_MODULE", "chat.settings")
# channel_layer = channels.asgi.get_channel_layer()
# import ipdb; ipdb.set_trace()
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "asgi_redis.RedisChannelLayer",
#         "CONFIG": {
#             "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
#         },
#         "ROUTING": "medicalConsultation.routing.channel_routing",
#     },
# }

# channel WS
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "asgiref.inmemory.ChannelLayer",
#         "ROUTING": "medicalConsultation.routing.channel_routing",
#     },
# }

channel_layer = RedisChannelLayer(
    channel_capacity={
        "http.request": 200,
        "http.response*": 10,
    }
)
# "redis://:127.0.0.1:6379"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "ROUTING": "medicalConsultation.routing.channel_routing",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
            # "symmetric_encryption_keys": [SECRET_KEY],
        },
    },
}

# channel_layer = RedisChannelLayer(
#     host="redis",
#     db=4,
#     channel_capacity={
#         "http.request": 200,
#         "http.response*": 10,
#     }
# )

# AUTH_USER_MODEL = 'authentication.Account'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
# PROD
# STATIC_URL = '/static/'
#
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, "static"),
#     os.path.join(PROJECT_DIR, PROJECT_NAME),
# )
#
#
# MEDIA_URL = '/'
#
# MEDIA_ROOT = os.path.join(os.path.dirname(
#   os.path.dirname(__file__)), 'static')
#
#
# STATICFILES_DIRS = [
# os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static','uploads'),
# ]
# DEV
# STATIC_ROOT = '/var/www/vetadminweb/vetadminproject/static'

MEDIA_URL = '/'
STATIC_URL = '/static/'
MEDIA_DIR = os.path.join(
    os.path.dirname(os.path.dirname(__file__)), 'media', 'uploads')
MEDIA_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static')
STATICFILES_DIRS = [
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static'),
]
